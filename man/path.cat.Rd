% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pathcat.R
\name{path.cat}
\alias{path.cat}
\title{High level function that concatenates paths.}
\usage{
path.cat(..., fsep = .Platform$file.sep)
}
\arguments{
\item{...}{character string with each directory component}

\item{fsep}{Custom path separator. Defaults to \code{.Platform$file.sep}}
}
\value{
Character string with concatenated path
}
\description{
It tries to concatenate each argument in order from left to right
trying to emulate standard OS behaviour when user would put each argument in a separate \code{cd} (or in R \code{setwd(...)}) command. It also tries to be as platfrom-agnostic, as possible, treating '/' and '\\' equally.
}
\details{
This way it enhances \code{file.path} with two features:
\itemize{
 \item It understands that \code{..} means "go one directory up". When encountering \code{..} the last (the youngest)
   directory so far parsed gets deleted, or nothing happens if we are already on root.
 \item It understands when a path is absolute. Absolute path resets parsing from start with the path, just like you would expect from the command line. Path is treated as absolute if it either starts with '/' (or '\\'), or with regex \code{^([^/^\\]+:)[/\\]}
}
}
\seealso{
\code{\link[base]{file.path}}
}

